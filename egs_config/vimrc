" An example for a vimrc file.
"
" Maintainer:	Bram Moolenaar <Bram@vim.org>
" Last change:	2002 Sep 19
"
" To use it, copy it to
"     for Unix and OS/2:  ~/.vimrc
"	      for Amiga:  s:.vimrc
"  for MS-DOS and Win32:  $VIM\_vimrc
"	    for OpenVMS:  sys$login:.vimrc

" When started as "evim", evim.vim will already have done these settings.
if v:progname =~? "evim"
  finish
endif

"automatically close braces
inoremap {      {}<Left>
inoremap {<CR>  {<CR>}<Esc>O
inoremap {{     {
inoremap {}     {}

" Use Vim settings, rather then Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible
set bs=2
set cursorline
set encoding=utf-8

" Make shift-insert work like in Xterm
map <S-Insert> <MiddleMouse>
map! <S-Insert> <MiddleMouse>

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

if has("vms")
  set nobackup		" do not keep a backup file, use versions instead
else
  set backup		" keep a backup file
endif
set history=50		" keep 50 lines of command line history
set ruler		" show the cursor position all the time
set noshowcmd		" display incomplete commands
set incsearch		" do incremental searching

" For Win32 GUI: remove 't' flag from 'guioptions': no tearoff menu entries
" let &guioptions = substitute(&guioptions, "t", "", "g")

" Don't use Ex mode, use Q for formatting
map Q gq

" This is an alternative that also works in block mode, but the deleted
" text is lost and it only works for putting the current register.
"vnoremap p "_dp

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
"if &t_Co > 2 || has("gui_running")
  syntax on
   set hlsearch
"endif

" Only do this part when compiled with support for autocommands.
if has("autocmd")

  " Enable file type detection.
  " Use the default filetype settings, so that mail gets 'tw' set to 72,
  " 'cindent' is on in C files, etc.
  " Also load indent files, to automatically do language-dependent indenting.
  filetype plugin indent on

  " Put these in an autocmd group, so that we can delete them easily.
  augroup vimrcEx
  au!

  " For all text files set 'textwidth' to 78 characters.
  autocmd FileType text setlocal textwidth=78

  " When editing a file, always jump to the last known cursor position.
  " Don't do it when the position is invalid or when inside an event handler
  " (happens when dropping a file on gvim).
  autocmd BufReadPost *
    \ if line("'\"") > 0 && line("'\"") <= line("$") |
    \   exe "normal g`\"" |
    \ endif

  augroup END

else

  set autoindent		" always set autoindenting on

endif " has("autocmd")

"set autoindent
"set smartindent
set tabstop=4
set shiftwidth=4
"set smarttab
set expandtab
"set syntax=cpp
set cinoptions=l1
set gfn=Courier\ 10\ Pitch\ 14
set nobk
set nu
"set noexpandtab
map <F7> <ESC> :w <CR> :make -j4<CR>
map <F8> :cn <CR>
map mka <CR> :make <CR>
map <F6> ggVG

syntax enable
set t_Co=16

let g:ycm_filetype_specific_completion_to_disable = {
      \ 'gitcommit': 1,
      \ '*': 1
      \}

let g:solarized_termcolors=   16
"let g:solarized_termtrans =   1
let g:solarized_degrade   =   1
let g:solarized_bold      =   1
let g:solarized_underline =   1
let g:solarized_italic=1
let g:solarized_term_italics=1
"let g:solarized_contrast  =   "high"
"let g:solarized_visibility=   "high"
"let g:solarized_diffmode="low"
set background=dark
colorscheme solarized



let g:cpp_class_scope_highlight = 1
let g:cpp_member_variable_highlight = 1
let g:cpp_experimental_template_highlight = 1
let g:cpp_concepts_highlight = 1

highlight Search ctermbg=7


"set keymap=armenian-phonetic
set spell
hi clear SpellBad
highlight SpellBad ctermbg=0
highlight SpellLocal ctermbg=7
highlight SpellCap ctermbg=7
highlight SpellRare ctermbg=7

highlight Visual cterm=NONE ctermbg=23 ctermfg=NONE
highlight MatchParen ctermbg=0 ctermfg=178
highlight Comment cterm=italic


"set rtp+=~/.local/lib/python2.7/site-packages/powerline/bindings/vim
set laststatus=2
let g:airline_theme = 'luna'
"let g:airline_theme = 'solarized'
let g:airline_powerline_fonts = 1
set noshowmode


let g:airline#extensions#tabline#enabled = 1
"let g:airline#extensions#tabline#left_sep = ' '
"let g:airline#extensions#tabline#left_alt_sep = '|'
"let g:airline#extensions#tabline#fnamemod = ':t'

"au BufRead,BufNewFile *.cl set filetype=opencl
"au! Syntax opencl source /home/tigran/.vim/syntax/opencl.vim

augroup filetype
  au! BufRead,BufNewFile *.cl     set filetype=opencl
  au! BufRead,BufNewFile *.ll     set filetype=llvm
  au! BufRead,BufNewFile *.td     set filetype=tablegen
  au! BufRead,BufNewFile *.wfg     set filetype=wfg
augroup END

map f :py3f /workspace/wave/wavecompiler/tools/llvm/tools/clang/tools/clang-format/clang-format.py<cr>
imap <C-F> <c-o>:py3f /workspace/wave/wavecompiler/tools/llvm/tools/clang/tools/clang-format/clang-format.py<cr>
